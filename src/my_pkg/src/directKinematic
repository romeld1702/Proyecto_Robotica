#!/usr/bin/env python3
import rospy
import numpy as np
from sensor_msgs.msg import JointState
from robotfunctions import *
from markers import BallMarker, FrameMarker

if __name__ == '__main__':
    rospy.init_node("directKinematics_gen3")

    pub = rospy.Publisher('joint_states', JointState, queue_size=1)
    bmarker = BallMarker(color='RED')
    marker = FrameMarker()

    # Nombres de las articulaciones (sin gripper)
    jnames = [
    'prismatic_joint_rail',
    'joint_1', 'joint_2', 'joint_3',
    'joint_4', 'joint_5', 'joint_6'
    ]


    # Configuraci贸n articular de prueba (7 valores: rail + brazo)
    q = np.array([-0.8,-np.pi/2,-np.pi/4,np.pi/2,0,-np.pi/4,0])

    # ----- Diagn贸stico extra -----
    print("q usado:", q)
    print("Shape:", q.shape)

    # Calcular la pose
    T = fkine(q)
    pos = T[0:3, 3]

    print("\n----------------------------------")
    print(" q (configuraci贸n):", np.round(q, 4))
    print(" Posici贸n alcanzada:", np.round(pos, 4))
    print("----------------------------------\n")

    # Visualizar con markers
    bmarker.position(T)
    xquat = TF2xyzquat(T)
    marker.setPose(xquat)

    jstate = JointState()
    jstate.name = jnames
    jstate.position = q

    rate = rospy.Rate(20)
    while not rospy.is_shutdown():
        jstate.header.stamp = rospy.Time.now()
        pub.publish(jstate)
        marker.publish()
        rate.sleep()
