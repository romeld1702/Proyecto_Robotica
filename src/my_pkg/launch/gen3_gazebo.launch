<?xml version="1.0"?>
<launch>

  <!-- Argumentos opcionales -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- Lanzar Gazebo con mundo vacÃ­o -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Cargar el modelo del robot procesando Xacro -->
  <param name="robot_description"
         command="$(find xacro)/xacro '$(find kortex_description)/arms/gen3/6dof/urdf/gen3_on_rail.urdf.xacro' use_gazebo:=true"/>

  <!-- Publicador de estados del robot (obligatorio para RViz y Gazebo) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- Spawnear el robot en Gazebo -->
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-urdf -model gen3_on_rail -param robot_description"/>

  <!-- Cargar controladores desde archivo YAML -->
  <rosparam file="$(find my_pkg)/config/gen3_control.yaml" command="load"/>

  <!-- Lanzar los controladores definidos -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
        respawn="false" output="screen"
        args="joint_state_controller
              prismatic_joint_rail_position_controller
              joint_1_position_controller
              joint_2_position_controller
              joint_3_position_controller
              joint_4_position_controller
              joint_5_position_controller
              joint_6_position_controller"/>

</launch>
